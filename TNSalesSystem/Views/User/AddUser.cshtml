@model TNSalesSystem.Domain.User.UserData
@{
    ViewBag.Title = "Create New User";
    Layout = "~/Views/Shared/Main/_Layout.cshtml";
}
<link href="~/Content/css/Form.css" rel="stylesheet" />
<link href="~/Content/chosen/chosen.css" rel="stylesheet" />
<link href="~/Content/jsgrid/jsgrid-theme.css" rel="stylesheet" />
<link href="~/Content/jsgrid/jsgrid.css" rel="stylesheet" />
<script src="~/Content/chosen/chosen.jquery.js"></script>
<script src="~/Content/jsgrid/jsgrid.js"></script>

<script>
    var $j = jQuery.noConflict();
    $j(document).ready(function () {
        //  $j('[data-toggle="popover"]').popover();
        $j(".chosen-select").chosen({ max_selected_options: 5 });
        CreateUserListJsGrid();
    });
    function ValidateForm() {
        var letterNumber = /^[0-9a-zA-Z]+$/;
        if (document.getElementById("txtUserName").value == null || document.getElementById("txtUserName").value == "") {
            alert("Please enter the user name.");
            //bootbox.alert("Please enter the user name.", function () {
            //    document.getElementById("txtUserName").focus();
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'Please enter the user name.',
            //    center: false,
            //});
            return false;
        }
        if (document.getElementById("txtLoginName").value == null || document.getElementById("txtLoginName").value == "") {
            alert("Please enter the loginname.");
            //bootbox.alert("Please enter the loginname.", function () {
            //    document.getElementById("txtLoginName").focus();
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'Please enter the loginname.',
            //    center: false,
            //});
            return false;
        }
        //if (document.getElementById("txtLoginName").value != null || document.getElementById("txtLoginName").value != "") {
        //    return CheckLoginnameAvaliablityAjax();
        //}
        if (document.getElementById("txtPassword").value == null || document.getElementById("txtPassword").value == "") {
            alert("Please enter the password.");
            //bootbox.alert("Please enter the password.", function () {
            //    document.getElementById("txtPassword").focus();
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'Please enter the password.',
            //    center: false,
            //});
            return false;
        }
        if (document.getElementById("txtRePassword").value == null || document.getElementById("txtRePassword").value == "") {
            alert("Please enter the re password.");
            //bootbox.alert("Please enter the re password.", function () {
            //    document.getElementById("txtRePassword").focus();
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'Please enter the re password.',
            //    center: false,
            //});
            return false;
        }
        if ((document.getElementById("txtPassword").value.match(letterNumber))) {
            alert("Password shoid contain numbers,digits,special charactes.");
            //bootbox.alert("Password shoid contain numbers,digits,special charactes.", function () {
            //    document.getElementById("txtRePassword").focus();
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'Password should contain numbers,digits,special characters.',
            //    center: false,
            //});
            return false;
        }
        if (document.getElementById("txtPassword").value != document.getElementById("txtRePassword").value) {
            alert("Please enter the re password.");
            //bootbox.alert("You entered password and re-password dose not match.", function () {
            //    document.getElementById("txtRePassword").focus();
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'You entered password and re-password dose not match.',
            //    center: false,
            //});
            return false;
        }
        if (document.getElementById("txtMobileNo").value == null || document.getElementById("txtMobileNo").value == "") {
            alert("Please enter the mobile no.");
            //bootbox.alert("Please enter the mobile no.", function () {
            //    document.getElementById("txtMobileNo").focus();
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'Please enter the mobile no.',
            //    center: false,
            //});
            return false;
        }
        if (document.getElementById("txtAddres1").value == null || document.getElementById("txtAddres1").value == "") {
            alert("Please enter the address1.");
            //bootbox.alert("Please enter the address1.", function () {
            //    document.getElementById("txtAddres1").focus();
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'Please enter the address1.',
            //    center: false,
            //});
            return false;
        }
        if (document.getElementById("txtAddres2").value == null || document.getElementById("txtAddres2").value == "") {
            alert("Please enter the address2.");
            //bootbox.alert("Please enter the address2.", function () {
            //    document.getElementById("txtAddres2").focus();
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'Please enter the address2.',
            //    center: false,
            //});
            return false;
        }
        if (document.getElementById("txtCity").value == null || document.getElementById("txtCity").value == "") {
            alert("Please enter the city.");
            //bootbox.alert("Please enter the city.", function () {
            //    document.getElementById("txtCity").focus();
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'Please enter the city.',
            //    center: false,
            //});
            return false;
        }
        if (document.getElementById("ddlDistrict").value == "0" || document.getElementById("ddlDistrict").value == 0) {
            alert("Please select district.");
            //bootbox.alert("Please select district.", function () {
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'Please select district.',
            //    center: false,
            //});
            document.getElementById("ddlDistrict").focus();
            return false;
        }
        if (document.getElementById("ddlTaluk").value == "0" || document.getElementById("ddlTaluk").value == 0) {
            alert("Please select taluk.");
            //bootbox.alert("Please select taluk.", function () {
            //    document.getElementById("ddlTaluk").focus();
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'Please select taluk.',
            //    center: false,
            //});
            return false;
        }
        if (document.getElementById("ddlState").value == "0" || document.getElementById("ddlTaluk").value == 0) {
            alert("Please select state");
            //bootbox.alert("Please select state.", function () {
            //    document.getElementById("ddlState").focus();
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'Please select state.',
            //    center: false,
            //});
            return false;
        }
        if (document.getElementById("ddlCoutry").value == "0" || document.getElementById("ddlTaluk").value == 0) {
            alert("Please select country.");
            //bootbox.alert("Please select country.", function () {
            //    document.getElementById("ddlCoutry").focus();
            //});
            modal({
                type: 'warning',
                title: 'Warning',
                text: 'Please select country.',
                center: false,
            });
            return false;
        }
        if (document.getElementById("ddlRole").value == "0" || document.getElementById("ddlRole").value == 0) {
            alert("Please select country.");
            //bootbox.alert("Please select role.", function () {
            //    document.getElementById("ddlRole").focus();
            //});
            //modal({
            //    type: 'warning',
            //    title: 'Warning',
            //    text: 'Please select role.',
            //    center: false,
            //});
            return false;
        }
        else {
            document.getElementById("AddUser").submit();
        }
    }
    function CallReset() {
        window.location.reload();
    }
    function CreateUserListJsGrid() {
        $j.ajax({
            url: '../User/GetUserListAjax',
            method: 'Get',
            type: 'json',
            beforeSend: function () {

            },
            success: function (response) {
                $j("#UserListjsGrid").jsGrid({
                    width: "100%",
                    height: "400px",

                    inserting: false,
                    editing: false,
                    sorting: true,
                    paging: true,

                    data: eval(response),

                    fields: [
                       { name: "Id", title: "Id", align: "center", width: 50, visible: false },
                       { name: "UserName", title: "Name", align: "center", width: 100, visible: true },
                       { name: "MailID", title: "E-Mail", align: "center", width: 100, visible: true },
                       { name: "MobileNo", title: "Mobile No", align: "center", width: 100, visible: true },
                       { name: "AlternateMobileNo", title: "Alternate MobileNo", align: "center", width: 113, visible: true },
                       { name: "Address1", title: "Address1", align: "center", width: 100, visible: true },
                       { name: "Address2", title: "Address2", align: "center", width: 100, visible: true },
                       { name: "City", title: "City", align: "center", width: 100, visible: true },
                       { name: "DistrictName", title: "District", align: "center", width: 100, visible: true },
                       { name: "StateName", title: "State", align: "center", width: 100, visible: true },
                       { name: "CountryName", title: "Country", align: "center", width: 100, visible: true },
                       { name: "PostalCode", title: "PostalCode", align: "center", width: 80, visible: true }
                    ]
                });
            },
            error: function () {
                alert("An error occoured while geting user list");
            },

        });
    }
    function CheckLoginnameAvaliablityAjax() {
        $j.ajax({
            url: '../User/CheckLoginnameAvaliablityAjax?Loginname=' + $j("#txtLoginName").val(),
            error: function () {
                // alert("An error occoured while geting shop name");
                modal({
                    type: 'error',
                    title: 'Error',
                    text: 'An error occoured while geting records',
                    center: false,
                });
            },
            beforeSend: function () {

            },
            success: function (response) {
                if (response != "ok") {
                    //bootbox.alert("You entered loginname already exists enter different loginname.", function () {
                    //});
                    modal({
                        type: 'warning',
                        title: 'Warning',
                        text: 'You entered loginname already exists enter different loginname.',
                        center: false,
                    });
                    $j("#txtLoginName").val('');
                    return false;
                }
                else {
                    return true;
                }
            },

        });
    }
</script>
@using (Html.BeginForm("AddUser", "User", FormMethod.Post, new { @id = "AddUser", @name = "AddUser" }))
{
    <fieldset class="fieldcls">
        <legend>User Details</legend>
        <table cellpadding="3px" cellspacing="3px" align="center" border="0" style="width: 100%;">
            <tr>
                <td class="cotrolnametd">Enter user name
                </td>
                <td>
                    @Html.TextBoxFor(model => model.UserName, new { @id = "txtUserName", @class = "normaltextbox" })
                </td>
                <td class="cotrolnametd">Enter loginname
                </td>
                <td>
                    @Html.TextBoxFor(model => model.LoginName, new { @id = "txtLoginName", @class = "normaltextbox", @onchange = "CheckLoginnameAvaliablityAjax()" })
                </td>
            </tr>
            <tr>
                <td class="cotrolnametd">Enter password 
                </td>
                <td>
                    <!--<span title="Alert" data-toggle="popover" data-trigger="hover" data-content="Password shouid contain digits,characters and special characters.">-->
                    @Html.PasswordFor(Model => Model.Password, new { @id = "txtPassword", @class = "normaltextbox" })
                    <!--</span>-->
                </td>
                <td class="cotrolnametd">Re enter password
                </td>
                <td>
                    <input type="password" name="repassword" id="txtRePassword" class="normaltextbox" />
                </td>
            </tr>
            <tr>
                <td class="cotrolnametd">Enter user mobileno
                </td>
                <td>
                    @Html.TextBoxFor(model => model.MobileNo, new { @id = "txtMobileNo", @class = "normaltextbox" })
                </td>
                <td class="cotrolnametd">Eneter user alternative mobile no
                </td>
                <td>
                    @Html.TextBoxFor(model => model.AlternateMobileNo, new { @id = "txtAltMobileNo", @class = "normaltextbox" })
                </td>
            </tr>
            <tr>
                <td class="cotrolnametd">Enter mailid
                </td>
                <td>
                    @Html.TextBoxFor(model => model.MailID, new { @id = "MailID", @class = "normaltextbox" })
                </td>
                <td class="cotrolnametd">Enter address1
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Address1, new { @id = "txtAddres1", @class = "normaltextbox" })
                </td>
            </tr>
            <tr>
                <td class="cotrolnametd">Enter address2
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Address2, new { @id = "txtAddres2", @class = "normaltextbox" })
                </td>
                <td class="cotrolnametd">Enter city
                </td>
                <td>
                    @Html.TextBoxFor(model => Model.City, new { @id = "txtCity", @class = "normaltextbox" })
                </td>
            </tr>
            <tr>
                <td class="cotrolnametd">Select district
                </td>
                <td>
                    @Html.DropDownListFor(Model => Model.District, (SelectList)ViewBag.Districts, new { @id = "ddlDistrict", @class = "chosen-select normalselectbox", @style = "width: 180px;height: 28px;" })
                </td>
                <td class="cotrolnametd">Select taluk
                </td>
                <td>
                    @Html.DropDownListFor(model => model.Taluk, (SelectList)ViewBag.Taluks, new { @id = "ddlTaluk", @class = "chosen-select normalselectbox", @style = "width: 180px;height: 28px;" })
                </td>
            </tr>
            <tr>
                <td class="cotrolnametd">Select state
                </td>
                <td>
                    @Html.DropDownListFor(model => model.State, (SelectList)ViewBag.States, new { @id = "ddlState", @class = "chosen-select normalselectbox", @style = "width: 180px;height: 28px;" })
                </td>
                <td class="cotrolnametd">Select country
                </td>
                <td>
                    @Html.DropDownListFor(model => model.Country, (SelectList)ViewBag.Coutries, new { @id = "ddlCoutry", @class = "chosen-select normalselectbox", @style = "width: 180px;height: 28px;" })
                </td>
            </tr>
            <tr>
                <td class="cotrolnametd">Enter postal code
                </td>
                <td>
                    @Html.TextBoxFor(model => Model.PostalCode, new { @id = "txtPostalCode", @class = "normaltextbox" })
                </td>
                <td class="cotrolnametd">Select role
                </td>
                <td>
                    @Html.DropDownListFor(model => model.RoleId, (SelectList)ViewBag.Roles, new { @id = "ddlRole", @class = "chosen-select normalselectbox", @style = "width: 180px;height: 28px;", multiple = "multiple", placeholder = "Select roles" })
                </td>
            </tr>
            <tr>
                <td colspan="5" align="center">
                    <input type="button" value="Submit" class="myButton" onclick="ValidateForm()" />
                    <input type="button" value="Clear" class="myButton" onclick="CallReset()" />
                </td>
            </tr>
        </table>
    </fieldset>    
}
<fieldset class="fieldcls">
    <legend>User List</legend>
    <div id="UserListjsGrid"></div>
</fieldset>
